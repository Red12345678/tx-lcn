<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.codingapi.txlcn</groupId>
        <artifactId>tx-lcn</artifactId>
        <version>1.0.0.RELEASE</version>
    </parent>

    <artifactId>txlcn-tm</artifactId>
    <version>1.0.0.RELEASE</version>
    <packaging>jar</packaging>

    <properties>
        <docker.repository>119.yizhishang.com:5000</docker.repository>
        <docker.image.prefix>yizhishang</docker.image.prefix>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.codingapi.txlcn</groupId>
            <artifactId>txlcn-logger</artifactId>
        </dependency>

        <dependency>
            <groupId>com.codingapi.txlcn</groupId>
            <artifactId>txlcn-common</artifactId>
        </dependency>

        <dependency>
            <groupId>com.codingapi.txlcn</groupId>
            <artifactId>txlcn-txmsg-netty</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>com.ctrip.framework.apollo</groupId>
            <artifactId>apollo-client</artifactId>
            <version>1.4.0</version>
        </dependency>

    </dependencies>

    <!-- deploy 注释掉下 -->
    <build>

        <finalName>tx-manager</finalName>

        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-jar-plugin</artifactId>-->
                <!--<version>2.6</version>-->
                <!--<configuration>-->
                    <!--<archive>-->
                        <!--<manifest>-->
                            <!--<mainClass>com.codingapi.txlcn.tm.TMApplication</mainClass>-->
                            <!--<addClasspath>true</addClasspath>-->
                            <!--<classpathPrefix>lib/</classpathPrefix>-->
                        <!--</manifest>-->
                        <!--<manifestEntries>-->
                            <!--<Class-Path>./</Class-Path>-->
                        <!--</manifestEntries>-->
                    <!--</archive>-->
                    <!--<excludes>-->
                        <!--<exclude>config/**</exclude>-->
                    <!--</excludes>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <!--<plugin>-->
                <!--<artifactId>maven-assembly-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<appendAssemblyId>false</appendAssemblyId>-->
                    <!--<descriptors>-->
                        <!--<descriptor>src/main/build/package.xml</descriptor>-->
                    <!--</descriptors>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>make-assembly</id>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>single</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!--docker 构建-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.0</version>
                <executions>
                    <execution>
                        <id>build-image</id><!-- 要绑定到的生命周期的阶段 -->
                        <phase>package</phase><!-- 要绑定到的生命周期的阶段 -->
                        <goals> <!-- 要绑定的插件的目标 -->
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <dockerHost>http://192.168.110.119:2375</dockerHost>
                    <serverId>docker-local</serverId>
                    <registryUrl>${docker.repository}</registryUrl>

                    <imageName>${docker.repository}/${docker.image.prefix}/${project.build.finalName}</imageName>
                    <forceTags>true</forceTags>

                    <!-- 指定Dockerfile所在的路径 -->
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>

                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
